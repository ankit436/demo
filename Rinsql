-- Create tables without foreign keys
CREATE TABLE RIN_ROI_TYPE (
    ID VARCHAR2(50) PRIMARY KEY,
    TYPE_NAME NVARCHAR2(200) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT CHK_TYPE_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_STATUS (
    ID VARCHAR2(50) PRIMARY KEY,
    PROJECT_STATUS NVARCHAR2(200) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT CHK_STATUS_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_PROGRAM (
    ID VARCHAR2(50) PRIMARY KEY,
    PROGRAM_NAME NVARCHAR2(200) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT CHK_PROGRAM_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_PHASE (
    ID VARCHAR2(50) PRIMARY KEY,
    PROJECT_PHASE_NAME NVARCHAR2(200) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT CHK_PHASE_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_BUSINESS_UNIT (
    ID VARCHAR2(50) PRIMARY KEY,
    BUSINESS_UNIT_NAME NVARCHAR2(200) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT CHK_BU_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_REGION (
    ID VARCHAR2(50) PRIMARY KEY,
    REGION_NAME NVARCHAR2(200) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT CHK_REGION_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

-- Create tables with foreign key constraints
CREATE TABLE RIN_ROI_PROJECT (
    ID VARCHAR2(50) PRIMARY KEY,
    NAME NVARCHAR2(100) NOT NULL,
    START_DATE DATE,
    END_DATE DATE,
    TYPE VARCHAR2(50) NOT NULL,
    SPONSOR NVARCHAR2(200),
    IT_OWNER NVARCHAR2(200),
    STATUS VARCHAR2(50) NOT NULL,
    BUSINESS_OWNER NVARCHAR2(200),
    BUSINESS_OWNER1 NVARCHAR2(200),
    PROGRAM VARCHAR2(50) NOT NULL,
    BUSINESS_EVP NVARCHAR2(200),
    FUND NVARCHAR2(50),
    PHASE VARCHAR2(50) NOT NULL,
    IN_YEAR CLOB,
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    BU VARCHAR2(50) NOT NULL,
    BENEFICIARY_CLIENT_COUNT NVARCHAR2(100),
    BENEFICIARY_CLIENT_NAME NVARCHAR2(200),
    REGION VARCHAR2(50) NOT NULL,
    BENEFIT_TYPE NVARCHAR2(200),
    PROJECT_BENEFITS INT,
    IDEA_ID INT,
    GMAS_ID INT,
    DELETED_AT TIMESTAMP,
    CREATED_DATE DATE DEFAULT SYSDATE,
    DURATION AS (END_DATE - START_DATE) VIRTUAL,
    CONSTRAINT FK_PROJECT_TYPE FOREIGN KEY (TYPE) REFERENCES RIN_ROI_TYPE(ID),
    CONSTRAINT FK_PROJECT_STATUS FOREIGN KEY (STATUS) REFERENCES RIN_ROI_STATUS(ID),
    CONSTRAINT FK_PROJECT_PROGRAM FOREIGN KEY (PROGRAM) REFERENCES RIN_ROI_PROGRAM(ID),
    CONSTRAINT FK_PROJECT_PHASE FOREIGN KEY (PHASE) REFERENCES RIN_ROI_PHASE(ID),
    CONSTRAINT FK_PROJECT_BU FOREIGN KEY (BU) REFERENCES RIN_ROI_BUSINESS_UNIT(ID),
    CONSTRAINT FK_PROJECT_REGION FOREIGN KEY (REGION) REFERENCES RIN_ROI_REGION(ID),
    CONSTRAINT CHK_PROJECT_DATE_RANGE CHECK (START_DATE <= END_DATE),
    CONSTRAINT CHK_PROJECT_IS_DELETED CHECK (IS_DELETED IN (0, 1))
)
PARTITION BY RANGE (CREATED_DATE) (
    PARTITION P_2023 VALUES LESS THAN (TO_DATE('01-01-2024', 'DD-MM-YYYY')),
    PARTITION P_2024 VALUES LESS THAN (TO_DATE('01-01-2025', 'DD-MM-YYYY')),
    PARTITION P_FUTURE VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE RIN_ROI_METRIC (
    ID VARCHAR2(50) PRIMARY KEY,
    METRIC_NAME NVARCHAR2(200) NOT NULL,
    PROJECT_ID VARCHAR2(50) NOT NULL,
    TYPE NVARCHAR2(50) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_DATE DATE,
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT FK_METRIC_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES RIN_ROI_PROJECT(ID),
    CONSTRAINT CHK_METRIC_IS_DELETED CHECK (IS_DELETED IN (0, 1))
)
PARTITION BY RANGE (CREATED_DATE) (
    PARTITION P_2023 VALUES LESS THAN (TO_DATE('01-01-2024', 'DD-MM-YYYY')),
    PARTITION P_2024 VALUES LESS THAN (TO_DATE('01-01-2025', 'DD-MM-YYYY')),
    PARTITION P_FUTURE VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE RIN_ROI_PROJECT_USER (
    ID VARCHAR2(50) PRIMARY KEY,
    PROJECT_ID VARCHAR2(50) NOT NULL,
    USER_ID NVARCHAR2(50),
    CREATED_DATE DATE DEFAULT SYSDATE,
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT FK_PROJECT_USER_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES RIN_ROI_PROJECT(ID),
    CONSTRAINT CHK_PROJECT_USER_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_PROJECT_BENEFITS (
    ID VARCHAR2(50) PRIMARY KEY,
    PROJECT_ID VARCHAR2(50) NOT NULL,
    NAME NVARCHAR2(200),
    CONTENT CLOB,
    AS_OF_DATE DATE,
    CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT FK_PROJECT_BENEFITS_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES RIN_ROI_PROJECT(ID),
    CONSTRAINT CHK_PROJECT_BENEFITS_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_REPORT (
    ID VARCHAR2(50) PRIMARY KEY,
    PROJECT_ID VARCHAR2(50) NOT NULL,
    REPORT_TYPE_ID VARCHAR2(50) NOT NULL,
    NAME NVARCHAR2(200),
    CONTENT CLOB,
    AS_OF_DATE DATE,
    CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    CREATED_BY NVARCHAR2(200),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT FK_REPORT_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES RIN_ROI_PROJECT(ID),
    CONSTRAINT FK_REPORT_TYPE FOREIGN KEY (REPORT_TYPE_ID) REFERENCES RIN_ROI_REPORT_TYPE(ID),
    CONSTRAINT CHK_REPORT_IS_DELETED CHECK (IS_DELETED IN (0, 1))
)
PARTITION BY RANGE (CREATED_DATE) (
    PARTITION P_2023 VALUES LESS THAN (TO_DATE('01-01-2024', 'DD-MM-YYYY')),
    PARTITION P_2024 VALUES LESS THAN (TO_DATE('01-01-2025', 'DD-MM-YYYY')),
    PARTITION P_FUTURE VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE RIN_ROI_REPORT_TYPE (
    ID VARCHAR2(50) PRIMARY KEY,
    REPORT_NAME NVARCHAR2(200) NOT NULL,
    PROJECT_ID VARCHAR2(50) NOT NULL,
    REPORT_FREQUENCY NVARCHAR2(50) NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    UPDATED_DATE DATE,
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT FK_REPORT_TYPE_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES RIN_ROI_PROJECT(ID),
    CONSTRAINT CHK_REPORT_TYPE_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_REPORT_TYPE_METRIC (
    REPORT_TYPE_ID VARCHAR2(50),
    METRIC_ID VARCHAR2(50),
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT PK_REPORT_TYPE_METRIC PRIMARY KEY (REPORT_TYPE_ID, METRIC_ID),
    CONSTRAINT FK_REPORT_TYPE_METRIC_REPORT_TYPE FOREIGN KEY (REPORT_TYPE_ID) REFERENCES RIN_ROI_REPORT_TYPE(ID),
    CONSTRAINT FK_REPORT_TYPE_METRIC_METRIC FOREIGN KEY (METRIC_ID) REFERENCES RIN_ROI_METRIC(ID),
    CONSTRAINT CHK_REPORT_TYPE_METRIC_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

CREATE TABLE RIN_ROI_EXPRESSION (
    ID VARCHAR2(50) PRIMARY KEY,
    REPORT_TYPE_ID VARCHAR2(50) NOT NULL,
    NAME NVARCHAR2(200) NOT NULL,
    EXPRESSION CLOB,
    CREATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_DATE DATE,
    IS_DELETED NUMBER(1) DEFAULT 0 NOT NULL,
    DELETED_AT TIMESTAMP,
    CONSTRAINT FK_EXPRESSION_REPORT_TYPE FOREIGN KEY (REPORT_TYPE_ID) REFERENCES RIN_ROI_REPORT_TYPE(ID),
    CONSTRAINT CHK_EXPRESSION_IS_DELETED CHECK (IS_DELETED IN (0, 1))
);

-- Create views for active (non-deleted) records
CREATE VIEW V_RIN_ROI_ACTIVE_PROJECTS AS
SELECT * FROM RIN_ROI_PROJECT WHERE IS_DELETED = 0;

CREATE VIEW V_RIN_ROI_ACTIVE_REPORTS AS
SELECT * FROM RIN_ROI_REPORT WHERE IS_DELETED = 0;

-- Create trigger for auditing
CREATE OR REPLACE TRIGGER TRG_RIN_ROI_PROJECT_AUDIT
AFTER INSERT OR UPDATE OR DELETE ON RIN_ROI_PROJECT
FOR EACH ROW
BEGIN
    INSERT INTO RIN_ROI_AUDIT_LOG (
        LOG_ID,
        TABLE_NAME, 
        OPERATION, 
        RECORD_ID, 
        CHANGE_DATE
    ) VALUES (
        SEQ_RIN_ROI_AUDIT_LOG.NEXTVAL, -- Assuming a sequence exists for LOG_ID
        'RIN_ROI_PROJECT',
        CASE
            WHEN INSERTING THEN 'INSERT'
            WHEN UPDATING THEN 'UPDATE'
            WHEN DELETING THEN 'DELETE'
        END,
        :NEW.ID,
        SYSDATE
    );
END;
/

-- Assuming a sequence for LOG_ID in audit log table
CREATE SEQUENCE SEQ_RIN_ROI_AUDIT_LOG
START WITH 1
INCREMENT BY 1
NOCACHE;

-- Add comments
COMMENT ON TABLE RIN_ROI_TYPE IS 'Stores types of ROI projects';
COMMENT ON TABLE RIN_ROI_STATUS IS 'Stores possible statuses for ROI projects';
COMMENT ON TABLE RIN_ROI_PROGRAM IS 'Stores programs associated with ROI projects';
COMMENT ON TABLE RIN_ROI_PHASE IS 'Stores phases of ROI projects';
COMMENT ON TABLE RIN_ROI_BUSINESS_UNIT IS 'Stores business units associated with ROI projects';
COMMENT ON TABLE RIN_ROI_REGION IS 'Stores regions associated with ROI projects';
COMMENT ON TABLE RIN_ROI_PROJECT IS 'Stores information about ROI projects';
COMMENT ON COLUMN RIN_ROI_PROJECT.NAME IS 'The name of the project';
COMMENT ON COLUMN RIN_ROI_PROJECT.DURATION IS 'Calculated duration of the project in days';
COMMENT ON TABLE RIN_ROI_METRIC IS 'Stores metrics related to ROI projects';
COMMENT ON COLUMN RIN_ROI_METRIC.METRIC_NAME IS 'Name of the metric';
COMMENT ON TABLE RIN_ROI_PROJECT_USER IS 'Stores user associations with ROI projects';
COMMENT ON TABLE RIN_ROI_PROJECT_BENEFITS IS 'Stores benefits associated with ROI projects';
COMMENT ON TABLE RIN_ROI_REPORT IS 'Stores reports associated with ROI projects';
COMMENT ON TABLE RIN_ROI_REPORT_TYPE IS 'Stores types of reports for ROI projects';
COMMENT ON TABLE RIN_ROI_REPORT_TYPE_METRIC IS 'Stores associations between report types and metrics';
COMMENT ON TABLE RIN_ROI_EXPRESSION IS 'Stores expressions used in ROI reports';
