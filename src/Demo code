"Dear [Manager's Name],

I trust this message finds you well. I wanted to share that I recently sustained an ankle injury that has led my doctor to recommend a 10-day period of rest and recovery. During this time, I kindly request the possibility of working from home to ensure I can focus on healing while still contributing to our team's efforts.

I'm committed to maintaining my productivity and keeping lines of communication open. If it would be convenient, I'd be happy to discuss the details of how I plan to manage my tasks remotely and ensure a smooth workflow.

I genuinely appreciate your consideration of this request and am grateful for your ongoing support.

Warm regards,
[Your Name





import React, { useState } from 'react';
import axios from 'axios';

function ImageUpload() {
  const [selectedFile, setSelectedFile] = useState(null);
  const [uploading, setUploading] = useState(false);
  const [uploadedImageUrl, setUploadedImageUrl] = useState('');

  const handleImageUpload = async (event) => {
    const file = event.target.files[0];
    setSelectedFile(file);

    if (file) {
      setUploading(true);

      const formData = new FormData();
      formData.append('image', file);

      try {
        const response = await axios.post('/upload', formData);
        setUploadedImageUrl(response.data.imageUrl);
      } catch (error) {
        console.error('Error uploading image:', error);
      } finally {
        setUploading(false);
      }
    }
  };

  return (
    <div>
      <h1>Image Upload Demo</h1>
      <input type="file" accept="image/*" onChange={handleImageUpload} />
      
      {uploading && <p>Uploading...</p>}
      
      {uploadedImageUrl && (
        <div>
          <p>Image Uploaded:</p>
          <img src={uploadedImageUrl} alt="Uploaded" />
        </div>
      )}
    </div>
  );
}

export default ImageUpload;









import React, { useState } from 'react';
import axios from 'axios';

function FileUpload() {
  const [selectedFile, setSelectedFile] = useState(null);
  const [previewURL, setPreviewURL] = useState('');
  const [uploading, setUploading] = useState(false);
  const [uploadStatus, setUploadStatus] = useState('');

  const handleFileChange = (event) => {
  const handleFileChange = (event) => {
    const file = event.target.files[0];

    if (file && isImageFile(file)) {
      setSelectedFile(file);

      const reader = new FileReader();
      reader.onload = () => {
        setPreviewURL(reader.result);
      };
      reader.readAsDataURL(file);

      setError('');
    } else {
      setSelectedFile(null);
      setPreviewURL('');
      setError('Invalid file format. Please select a valid image file.');
    }
  };

  const isImageFile = (file) => {
    return file.type.startsWith('image/');
  };

  const handleUpload = async () => {
    if (selectedFile) {
      setUploading(true);

      const formData = new FormData();
      formData.append('file', selectedFile);

      try {
        const response = await axios.post('/api/upload', formData, {
          headers: {
            'Content-Type': 'multipart/form-data'
          }
        });

        setUploadStatus('File uploaded successfully!');
      } catch (error) {
        console.error('Error uploading file:', error);
        setUploadStatus('File upload failed.');
      } finally {
        setUploading(false);
      }
    }
  };

  return (
    <div>
      <h1>File Upload</h1>
      <input
        type="file"
        accept=".jpg, .jpeg, .png, .gif"  {/* Specify the accepted file types here */}
        onChange={handleFileChange}
      />
      {previewURL && <img src={previewURL} alt="Preview" style={{ maxWidth: '100%' }} />}
      <button onClick={handleUpload} disabled={!selectedFile || uploading}>
        Upload
      </button>
      <p>{uploadStatus}</p>
    </div>
  );
}

export default FileUpload;
