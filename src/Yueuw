import { useState, useEffect, useRef } from 'react';

export const usePageSize = (initialCount = 20) => {
  const [pageSize, setPageSize] = useState(initialCount);
  const contentRef = useRef(null);

  useEffect(() => {
    const handleResize = (height) => {
      if (height < 500) {
        setPageSize(5);
      } else if (height >= 500 && height < 600) {
        setPageSize(3);
      } else if (height >= 600 && height < 700) {
        setPageSize(9);
      } else if (height >= 700 && height < 750) {
        setPageSize(10);
      } else if (height >= 750 && height < 800) {
        setPageSize(12);
      } else if (height >= 800 && height < 900) {
        setPageSize(14);
      } else if (height >= 900 && height < 950) {
        setPageSize(15);
      } else if (height >= 950 && height < 1200) {
        setPageSize(18);
      } else {
        setPageSize(20);
      }
    };

    const observer = new ResizeObserver((entries) => {
      for (let entry of entries) {
        handleResize(entry.contentRect.height);
      }
    });

    if (contentRef.current) {
      observer.observe(contentRef.current);
      // Set initial size based on current content height
      handleResize(contentRef.current.getBoundingClientRect().height);
    }

    return () => {
      if (contentRef.current) {
        observer.unobserve(contentRef.current);
      }
    };
  }, []);

  return [pageSize, contentRef];
};
