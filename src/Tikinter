def simulate_processing(self, progress_bar, remaining_progress_bar, progress_window):
    # Show the running progress bar
    progress_bar.start()

    # Simulate running progress (adjust as needed)
    for i in range(51):
        progress_bar["value"] = i * 2
        progress_window.update_idletasks()
        time.sleep(0.1)

    # Stop the running progress bar
    progress_bar.stop()

    # Show the remaining progress bar
    remaining_progress_bar.start()

    # Simulate remaining progress (adjust as needed)
    for i in range(50):
        remaining_progress_bar["value"] = i * 2
        progress_window.update_idletasks()
        time.sleep(0.1)

    # Stop the remaining progress bar
    remaining_progress_bar.stop()

    # Close the progress window
    progress_window.destroy()

    # Add the action you want to perform on submit
    messagebox.showinfo("Submit", "Form Submitted!")

def file_copy_progress(self):
    # Create a Toplevel window for the progress bars
    progress_window = tk.Toplevel(self.root)
    progress_window.title("File Copy Progress")

    # Progress bar widgets
    progress_bar = ttk.Progressbar(progress_window, length=400, mode="indeterminate")
    progress_bar.grid(row=0, column=0, padx=20, pady=20)

    remaining_progress_bar = ttk.Progressbar(progress_window, length=400, mode="indeterminate")
    remaining_progress_bar.grid(row=1, column=0, padx=20, pady=10)

    # Start a new thread for the progress bars
    threading.Thread(target=self.simulate_processing, args=(progress_bar, remaining_progress_bar, progress_window)).start()

    # Hide the main UI
    self.root.iconify()

if __name__ == "__main__":
    root = tk.Tk()
    app = MyApp(root)
    root.mainloop()
